#include <Servo.h>

#define TRIG_MOTION 7     // 모션 감지용 초음파 센서 트리거 핀
#define ECHO_MOTION 6     // 모션 감지용 초음파 센서 에코 핀
#define TRIG_BIN 9        // 쓰레기통 상태 확인용 초음파 센서 트리거 핀
#define ECHO_BIN 8        // 쓰레기통 상태 확인용 초음파 센서 에코 핀
#define SERVO_PIN 10      // 서보 모터 핀
#define LED_PIN 5         // LED 핀

Servo myservo;

// 쓰레기통 높이 및 거리 임계값
const int TRASH_BIN_HEIGHT = 30; // 쓰레기통 내부 높이 (cm)
const int FULL_THRESHOLD = 5;   // 쓰레기통이 꽉 찼다고 판단할 거리 (cm)
const int MOTION_THRESHOLD = 20; // 모션 감지 거리 (cm)

void setup() {
  pinMode(TRIG_MOTION, OUTPUT);
  pinMode(ECHO_MOTION, INPUT);
  pinMode(TRIG_BIN, OUTPUT);
  pinMode(ECHO_BIN, INPUT);
  pinMode(LED_PIN, OUTPUT);

  myservo.attach(SERVO_PIN);
  myservo.write(90); // 초기 상태: 뚜껑 닫힘
  digitalWrite(LED_PIN, LOW); // 초기 상태: LED 꺼짐

  Serial.begin(9600); // 디버깅용 시리얼 통신
}

// 초음파 센서를 이용해 거리 측정
float getDistance(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  unsigned long duration = pulseIn(echoPin, HIGH);
  float distance = duration * 0.034 / 2; // 거리 계산 (cm 단위)
  return distance;
}

void loop() {
  // 초음파 센서 1: 모션 감지
  float motionDistance = getDistance(TRIG_MOTION, ECHO_MOTION);
  Serial.print("Motion Distance: ");
  Serial.println(motionDistance);

  // 초음파 센서 2: 쓰레기통 상태 확인
  float binDistance = getDistance(TRIG_BIN, ECHO_BIN);
  Serial.print("Bin Distance: ");
  Serial.println(binDistance);

  // LED 상태 업데이트
  if (binDistance > 0 && binDistance <= FULL_THRESHOLD) {
    digitalWrite(LED_PIN, HIGH); // 쓰레기통 꽉 참
  } else {
    digitalWrite(LED_PIN, LOW);  // 쓰레기통 여유 있음
  }

  // 모션 감지로 뚜껑 제어
  if (motionDistance > 0 && motionDistance <= MOTION_THRESHOLD) {
    myservo.write(150); // 뚜껑 열림
    delay(2000);        // 2초 동안 유지
  } else {
    myservo.write(90);  // 뚜껑 닫힘
  }

  delay(100); // 센서 업데이트 주기
}
